Power BI DAX Functions
----------------------

Data Analysis Expressions (DAX) is a library of functions and operators that can be combined 
to build formulas and expressions in Power BI, Analysis Services, and Power Pivot in 
Excel data models.

Power BI support more then 200 types of DAX functions like- Date & Time functions, 
Filter functions, Text functions, Information functions, Logical functions, 
Time intelligence functions, Mathematical functions etc.

SuperStoreUS-2015.xlxs   -- Use Dataset for Example------

Filter DAX Functions
---------------------

ALL
ALLSELECTED
ALLEXCEPT
CALCULATE
CALCULATETABLE
FILTER


1. ALL
--------
Returns all the rows in a table, or all the values in a column. 
ALL function removes the applied filters from the filter context. 
Its comes under Filter function DAX category.

The ALL function can be applied to either a table or a set of columns.


ALL_DAX = 
CALCULATE(Sum(Orders[Sales]), ALL(Orders[Product Sub-Category]))

2.ALLSELECTED
-------------

Returns all the rows in a table, or all the values in a column
Removes context filters from columns and rows in the current query
keeping filters that come from outside.

ALLSELECTED function takes one or no arguments.

ALLSELECTED_DAX =

CALCULATE(Sum(Orders[Sales]),ALLSELECTED(Orders[Product Sub-Category]))


SumTotal:= CALCULATE (SUM (Sales[Sales Amount]),ALLSELECTED ()) 

3.ALLEXCEPT
------------

The first argument to the ALLEXCEPT function must be a reference to a base table. 
All subsequent arguments must be references to base columns. 
You cannot use table expressions or column expressions with the ALLEXCEPT function.

ALLEXCEPT_SALES =
CALCULATE (
    SUM ( Orders[Sales] ),
    ALLEXCEPT ( Orders, Orders[Product Category] ))



4.CALCULATE
-----------

CALCULATE DAX  function evaluates an expression in a modified filter context. 
Its comes under Filter DAX function category.

CALCULATE is the most often used DAX function in Power BI,  
this function works as a base function to apply other DAX functions in different scenarios.

SUM Measure = CALCULATE(SUM(Orders[Sales]),----Expression
Filter(Orders, Orders[Product Category]="Furniture"))-- filter

Other Way to Write formula:

SUMX with filter = 
SUMX(Filter(Orders, Orders[Product Category]="Furniture"),
Orders[Sales])

COUNTROWS = CALCULATE(COUNTROWS(Orders),
FILTER(Orders, Orders[Region]="East"))

COUNTROWS = CALCULATE(COUNTROWS(Orders),
FILTER(Orders, Orders[Region]='Orders'[Region]))


5.CALCULATETABLE
----------------
CALCULATETABLE DAX function comes under Power BI Filter 
DAX category and It evaluates a table 
expression in a context modified by the given filters. 
It returns a table of values.

CALCULATETABLE allows you to create virtual tables that you 
can filter using multiple conditions 
and use that table to make further calculations.

Sample dataset- Global_superstore_2016.xls

Create one measure and write below DAX code.


Calculate_Table_with_measure =
CALCULATE_TABLE(Orders, Orders[Sales]>2000)


Add one card visual and drag measure.

CALCULATETABLE function with SUMMARIZE function
As you have seen above, a CALCULATETABLE function returns a table based on given filter 
condition, and it return all columns of base table.

But if you want to see only specific columns then you can use SUMMARIZE DAX function with 
CALCULATETABLE.

Now go to modeling tab > Add new DAX table

Calculatetable_with_Summarize = 
CALCULATETABLE(
SUMMARIZE(Orders, Orders[Category], Orders[Sub-Category], 
Orders[Sales]),
Orders[Sales]>5000)

---------------------------------------------------------------

7.FILTER
---------
FILTER can filter rows from a table by using any expression 
valid in the row context.
Thanks to context transition, using a measure in the filter 
expression it is possible to filter 
a table based on a dynamic calculation involving other rows 
and/or tables.

 Sample Dataset :- SuperStoreUS-2015.xlxs

Filter with SUM =
CALCULATE(SUM(Orders[Sales]),
Filter(Orders, Orders[Product Category]="Furniture"))

Filter with SUMX =
SUMX(
Filter(Orders, Orders[Product Category]="Furniture"),
Orders[Sales])

Filter with OR cond. =
SUMX(
Filter(Orders,
OR(Orders[Product Category]="Furniture",
Orders[Product Category]="Office Supplies" )),
Orders[Sales])


Filter with AND cond. =
SUMX(
Filter(Orders,
AND(Orders[Product Category]="Furniture",
Orders[Region]="East" )),
Orders[Sales]
)














